{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["let userSelectedDate = null;\n\nconst startButton = document.querySelector('button[data-start]');\nconst dateTimePicker = document.querySelector('#datetime-picker');\nconst daysElement = document.querySelector('[data-days]');\nconst hoursElement = document.querySelector('[data-hours]');\nconst minutesElement = document.querySelector('[data-minutes]');\nconst secondsElement = document.querySelector('[data-seconds]');\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    if (selectedDate <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      startButton.disabled = true;\n    } else {\n      userSelectedDate = selectedDate;\n      startButton.disabled = false;\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  return { days, hours, minutes, seconds };\n}\n\nfunction updateTimer() {\n  const now = new Date();\n  const timeDiff = userSelectedDate - now;\n  if (timeDiff <= 0) {\n    clearInterval(intervalId);\n    iziToast.success({ title: 'Timer', message: 'Timer finished!' });\n    startButton.disabled = true;\n    dateTimePicker.disabled = false;\n    return;\n  }\n\n  const { days, hours, minutes, seconds } = convertMs(timeDiff);\n  daysElement.textContent = addLeadingZero(days);\n  hoursElement.textContent = addLeadingZero(hours);\n  minutesElement.textContent = addLeadingZero(minutes);\n  secondsElement.textContent = addLeadingZero(seconds);\n}\n\nlet intervalId = null;\n\nstartButton.addEventListener('click', () => {\n  if (!userSelectedDate) return;\n  startButton.disabled = true;\n  dateTimePicker.disabled = true;\n  clearInterval(intervalId);\n  intervalId = setInterval(updateTimer, 1000);\n});\n"],"names":["userSelectedDate","startButton","dateTimePicker","daysElement","hoursElement","minutesElement","secondsElement","addLeadingZero","value","options","selectedDates","selectedDate","convertMs","ms","days","hours","minutes","seconds","updateTimer","timeDiff","intervalId"],"mappings":"wFAAA,IAAIA,EAAmB,KAEvB,MAAMC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EAE9D,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,MACtB,SAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACDV,EAAY,SAAW,KAEvBD,EAAmBW,EACnBV,EAAY,SAAW,GAE1B,CACH,EAEA,UAAU,mBAAoBQ,CAAO,EAErC,SAASG,EAAUC,EAAI,CAKrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAClE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,GAAc,CAErB,MAAMC,EAAWnB,EADL,IAAI,KAEhB,GAAImB,GAAY,EAAG,CACjB,cAAcC,CAAU,EACxB,SAAS,QAAQ,CAAE,MAAO,QAAS,QAAS,iBAAiB,CAAE,EAC/DnB,EAAY,SAAW,GACvBC,EAAe,SAAW,GAC1B,MACD,CAED,KAAM,CAAE,KAAAY,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUO,CAAQ,EAC5DhB,EAAY,YAAcI,EAAeO,CAAI,EAC7CV,EAAa,YAAcG,EAAeQ,CAAK,EAC/CV,EAAe,YAAcE,EAAeS,CAAO,EACnDV,EAAe,YAAcC,EAAeU,CAAO,CACrD,CAEA,IAAIG,EAAa,KAEjBnB,EAAY,iBAAiB,QAAS,IAAM,CACrCD,IACLC,EAAY,SAAW,GACvBC,EAAe,SAAW,GAC1B,cAAckB,CAAU,EACxBA,EAAa,YAAYF,EAAa,GAAI,EAC5C,CAAC"}